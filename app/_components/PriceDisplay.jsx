'use client';

import React from 'react';
import { SaudiRiyal } from 'lucide-react';

function PriceDisplay({ 
  basePrice = 0, 
  selectedOptions = [], 
  isWeighed = false,
  unit = null,
  quantity = 1
}) {
  // ุชุญุณูู: ุญุณุงุจ ุฌููุน ุงูููู ุงููุทููุจุฉ ูู ููุงู ูุงุญุฏ ูุถูุงู ุงูุงุชุณุงู
  const calculations = React.useMemo(() => {
    if (!selectedOptions.length || !isWeighed) {
      return {
        finalPrice: basePrice,
        finalPriceWithQuantity: basePrice * quantity,
        baseWeight: 0,
        totalWeight: 0,
        averageUnitPrice: basePrice,
        sortedWeights: []
      };
    }
    
    // ุชุฑุชูุจ ุงูุฃูุฒุงู ูู ุงูุฃูุจุฑ ุฅูู ุงูุฃุตุบุฑ
    const sortedWeights = [...selectedOptions].sort((a, b) => b.value - a.value);
    
    // ุญุณุงุจ ุงููุฒู ุงูุฃุณุงุณู (ุจุฏูู ูููุฉ)
    const baseWeight = sortedWeights.reduce((total, option) => total + option.value, 0);
    
    // ุญุณุงุจ ุงูุณุนุฑ ุงูุฃุณุงุณู ูุงููุฒู ุงูููู (ุงููููุฉ ุชุคุซุฑ ุนูู ุงููุฒู ุงูุฃูุจุฑ ููุท)
    let finalPrice = 0;
    let totalWeight = 0;
    
    sortedWeights.forEach((option, index) => {
      if (index === 0) {
        // ุงููุฒู ุงูุฃูุจุฑ: ุชุทุจูู ุงููุนุงูู ุงูุณุนุฑู
        const modifier = option.price_modifier || 1;
        finalPrice += basePrice * modifier * option.value;
        totalWeight += option.value * quantity; // ุงููููุฉ ุชุคุซุฑ ููุง ููุท
      } else {
        // ุงูุฃูุฒุงู ุงูุฃุตุบุฑ: ุจุฏูู ูุนุงูู ุณุนุฑู ูุจุฏูู ูููุฉ
        finalPrice += basePrice * option.value;
        totalWeight += option.value; // ุจุฏูู ูููุฉ
      }
    });
    
    // ุญุณุงุจ ุงูุณุนุฑ ุงูููุงุฆู ูุน ุงููููุฉ (ูุง ุชุถุฑุจ ูู ุดูุก ูู ุงููููุฉ)
    let finalPriceWithQuantity = 0;
    
    sortedWeights.forEach((option, index) => {
      if (index === 0) {
        // ุงููุฒู ุงูุฃูุจุฑ: ุชุทุจูู ุงููุนุงูู ุงูุณุนุฑู ูุงููููุฉ
        const modifier = option.price_modifier || 1;
        finalPriceWithQuantity += basePrice * modifier * option.value * quantity;
      } else {
        // ุงูุฃูุฒุงู ุงูุฃุตุบุฑ: ุจุฏูู ูุนุงูู ุณุนุฑูุ ุจุฏูู ูููุฉ
        finalPriceWithQuantity += basePrice * option.value;
      }
    });
    
    // ุญุณุงุจ ูุชูุณุท ุณุนุฑ ุงููุญุฏุฉ
    const averageUnitPrice = totalWeight > 0 ? finalPriceWithQuantity / totalWeight : basePrice;
    
    return {
      finalPrice,
      finalPriceWithQuantity,
      baseWeight,
      totalWeight,
      averageUnitPrice,
      sortedWeights
    };
  }, [basePrice, selectedOptions, isWeighed, quantity]);

  const { 
    finalPrice, 
    finalPriceWithQuantity, 
    baseWeight, 
    totalWeight, 
    averageUnitPrice, 
    sortedWeights 
  } = calculations;
  
  const unitShortName = unit?.data?.attributes?.shortName || '';

  return (
    <div className="space-y-2">
      {/* ุนุฑุถ ุงูุณุนุฑ ุงูููุงุฆู */}
      <div className="space-y-2">
        <div className="flex items-center gap-2">
          <h2 className="text-3xl font-bold text-primary">
            {finalPriceWithQuantity.toFixed(2)}
          </h2>
          <SaudiRiyal className="w-8 h-8 text-primary" strokeWidth={1.5} />
        </div>
        
        {/* ุนุฑุถ ููุงุฑูุฉ ุงูุณุนุฑ ุงูุฃุณุงุณู ุจุงูุณุนุฑ ุงูููู ุนูุฏูุง ุชููู ุงููููุฉ > 1 */}
        {quantity > 1 && isWeighed && selectedOptions.length > 0 && (
          <div className="text-sm text-gray-600">
            <span>ุงูุณุนุฑ ุงูุฃุณุงุณู: {basePrice.toFixed(2)} ๏ทผ</span>
            <span className="mx-2">ร</span>
            <span>ุงููุฒู ุงูุฅุฌูุงูู: {totalWeight.toFixed(2)} {unitShortName}</span>
            <span className="mx-2">=</span>
            <span className="font-medium text-primary">{finalPriceWithQuantity.toFixed(2)} ๏ทผ</span>
          </div>
        )}
        
        {/* ููููุชุฌุงุช ุบูุฑ ุงูููุฒููุฉุ ุนุฑุถ ุณุนุฑ ุงููุทุนุฉ ร ุงููููุฉ */}
        {quantity > 1 && (!isWeighed || selectedOptions.length === 0) && (
          <div className="text-sm text-gray-600">
            <span>ุณุนุฑ ุงููุทุนุฉ: {basePrice.toFixed(2)} ๏ทผ</span>
            <span className="mx-2">ร</span>
            <span>ุงููููุฉ: {quantity}</span>
            <span className="mx-2">=</span>
            <span className="font-medium text-primary">{finalPriceWithQuantity.toFixed(2)} ๏ทผ</span>
          </div>
        )}
      </div>

      {/* ุฅุฌูุงูู ุงููุฒู ูุณุนุฑ ุงููุญุฏุฉ (ููููุชุฌุงุช ุงูููุฒููุฉ) */}
      {isWeighed && selectedOptions.length > 0 && (
        <div className="space-y-2">
          <div className="text-sm text-gray-600">
            <span className="font-medium">ุฅุฌูุงูู ุงููุฒู ุงููุฎุชุงุฑ:</span>
            <span className="ml-2 text-primary font-semibold">
              {totalWeight.toFixed(2)} {unitShortName}
            </span>
            {quantity > 1 && (
              <span className="block text-xs text-gray-500">
                (ุงููุฒู ุงูุฃุณุงุณู: {baseWeight.toFixed(2)} {unitShortName}ุ ุงููููุฉ {quantity} ุชุคุซุฑ ุนูู ุงููุฒู ุงูุฃูุจุฑ ููุท)
              </span>
            )}
          </div>
          <div className="text-sm text-gray-600">
            <span className="font-medium">ูุชูุณุท ุงูุณุนุฑ ููู {unitShortName}:</span>
            <span className="ml-2 text-primary font-semibold">
              {averageUnitPrice.toFixed(2)} ๏ทผ
            </span>
          </div>
          <div className="text-xs text-gray-500">
            ๐ก ุงูุณุนุฑ ุงูุฅุฌูุงูู = ูุฌููุน (ุงูุณุนุฑ ุงูุฃุณุงุณู ร ุงููุฒู ร ูุนุงูู ุงูุณุนุฑ ูููุฒู ุงูุฃูุจุฑ ููุท) ููู ูุฒู ูุฎุชุงุฑ
          </div>
        </div>
      )}

      {/* ุชูุงุตูู ุญุณุงุจ ุงูุณุนุฑ ููููุชุฌุงุช ุงูููุฒููุฉ */}
      {isWeighed && selectedOptions.length > 0 && (
        <div className="text-xs text-gray-500 space-y-1">
          <div className="flex items-center gap-2">
            <span>ุงูุณุนุฑ ุงูุฃุณุงุณู:</span>
            <span>{basePrice.toFixed(2)} ๏ทผ</span>
          </div>
          
          {/* ุชูุงุตูู ุญุณุงุจ ูู ุฎูุงุฑ ูุฒู */}
          {sortedWeights.map((option, index) => {
            const isLargest = index === 0;
            let price, calculation, modifierText;
            
            if (isLargest) {
              // ุงููุฒู ุงูุฃูุจุฑ: ุชุทุจูู ุงููุนุงูู ุงูุณุนุฑู ูุงููููุฉ
              const modifier = option.price_modifier || 1;
              price = basePrice * modifier * option.value * quantity;
              calculation = `${basePrice.toFixed(2)} ร ${option.value} ร ${modifier !== 1 ? modifier : 1} ร ${quantity}`;
              modifierText = modifier !== 1 ? (
                <span className={`text-xs ${modifier > 1 ? 'text-red-600' : 'text-green-600'}`}>
                  (ูุนุงูู: {modifier > 1 ? '+' : ''}{((modifier - 1) * 100).toFixed(0)}% + ูููุฉ: {quantity})
                </span>
              ) : (
                <span className="text-xs text-blue-600">(ูููุฉ: {quantity})</span>
              );
            } else {
              // ุงูุฃูุฒุงู ุงูุฃุตุบุฑ: ุจุฏูู ูุนุงูู ุณุนุฑูุ ุจุฏูู ูููุฉ
              price = basePrice * option.value;
              calculation = `${basePrice.toFixed(2)} ร ${option.value}`;
              modifierText = <span className="text-xs text-gray-500">(ูุฒู ุซุงุจุช ุจุฏูู ูุนุงูู)</span>;
            }
            
            return (
              <div key={option.id} className="flex items-center gap-2 ml-4">
                <span>โข {option.displayName || `${option.value} ${unitShortName}`}:</span>
                <span>{calculation} = </span>
                <span className="font-medium">{price.toFixed(2)} ๏ทผ</span>
                {modifierText}
              </div>
            );
          })}
          
          <div className="border-t pt-1 mt-1">
            <span className="font-medium">ุงููุฌููุน: {finalPriceWithQuantity.toFixed(2)} ๏ทผ</span>
          </div>
        </div>
      )}
    </div>
  );
}

export default PriceDisplay;